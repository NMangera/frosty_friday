-- CREATE TABLE OF THREE COLUMNS USING SAMPLE VALUES
CREATE OR REPLACE TABLE CUSTOMER_DEETS (
    ID INT,
    NAME STRING,
    EMAIL STRING
) AS
SELECT * FROM 
VALUES
    (1, 'Jeff Jeffy', 'jeff.jeffy121@gmail.com'),
    (2, 'Kyle Knight', 'kyleisdabest@hotmail.com'),
    (3, 'Spring Hall', 'hall.yay@gmail.com'),
    (4, 'Dr Holly Ray', 'drdr@yahoo.com');

-- QUERY DATA FROM THE TABLE
SELECT * FROM CUSTOMER_DEETS;

-- CREATE COLUMN LEVEL SECURITY, WHERE ONLY THE ACCOUNTADMIN CAN VIEW THE EMAIL ADDRESS
CREATE OR REPLACE MASKING POLICY EMAIL_MASK AS (VAL STRING) RETURNS STRING ->
  CASE
    WHEN CURRENT_ROLE() IN ('ACCOUNTADMIN') THEN VAL
    ELSE REGEXP_REPLACE(VAL, '.+\\@', '*****@')
  END;

-- APPLY THE POLICY TO THE EMAIL COLUMN
ALTER TABLE IF EXISTS CUSTOMER_DEETS MODIFY COLUMN EMAIL SET MASKING POLICY EMAIL_MASK;

-- GRANT USAGE PRIVILEGES ON THE DATABASE, SCHEMA, AND WAREHOUSE TO THE PUBLIC ROLE
GRANT USAGE ON DATABASE FF_CHALLENGE TO ROLE PUBLIC;
GRANT USAGE ON SCHEMA PUBLIC TO ROLE PUBLIC;
GRANT USAGE ON WAREHOUSE COMPUTE_WH TO ROLE PUBLIC;

-- GRANT SELECT PRIVILEGE ON THE CUSTOMER_DEETS TABLE TO THE PUBLIC ROLE
GRANT SELECT ON TABLE CUSTOMER_DEETS TO ROLE PUBLIC;

-- TEST THE APPLICATION OF THE POLICY USING DIFFERENT ROLES
SELECT * FROM CUSTOMER_DEETS;

-- CLEAN UP CODE
-- REMOVE THE EMAIL MASKING POLICY FROM THE EMAIL COLUMN IN THE CUSTOMER_DEETS TABLE
ALTER TABLE IF EXISTS CUSTOMER_DEETS MODIFY COLUMN EMAIL UNSET MASKING POLICY;
